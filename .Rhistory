ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)]
emp[tolower(job_id)=='it_prog',.(str_pad(first_name,10,'right','*'),str_pad(salary,10,'left','*'))]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)][,(salary_diff :=new_salary - salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)][,.(salary_diff :=new_salary - salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)][,(salary_diff :=new_salary - salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)][,(salary_diff =new_salary - salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)][,.(salary_diff =new_salary - salary)]
emp[,.(new_salary:= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)]
emp[,.(new_salary:= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)]
=
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary, new_salary-salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary, diff=new_salary-salary)]
emp[,.(new_salary= ifelse(tolower(job_id) == 'it_prog',salary * 1.1,
ifelse(tolower(job_id) == 'fi_account', salary * 1.5,  salary)), salary)]
emp
emp[,head(.SD,6)]
head(emp)
emp[employee_id=100,.(first_name, last_name)]
emp[employee_id==100,.(first_name, last_name)]
emp[department_id==50,.(first_name, last_name)]
emp[department_id==50,.(first_name, last_name)][.,(full_name = first_name + last_name)]
emp[department_id==50,.(first_name, last_name)][.,(full_name = paste(first_name,last_name))]
emp[department_id==50,.(first_name, last_name)][.,(full_name := paste(first_name,last_name))]
emp[department_id==50, full_name:=paste(first_name, last_name)]
emp[department_id==50, full_name=paste(first_name, last_name)]
emp[department_id==50, .(full_name)]
emp[department_id==50, .(full_name, salary)]
emp[department_id==50, .(full_name, salary)][,head()]
emp[department_id==50, .(full_name, salary)][,head(,SD)]
emp[department_id==50, .(full_name, salary)][,head(.SD)]
emp[department_id==50, .(full_name, salary)][,head(.SD)][order(salary)]
emp[department_id==50, .(full_name, salary)][,head(.SD)][order(-salary)]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = mean(salary)), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = round(mean(salary)),1), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = round(mean(salary),1)), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = round(mean(salary),1)), by=department_id][order(-department_id)]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = round(mean(salary),1)), by=department_id][order(-salary)]
# group 함수 ---------------------------------------------------------------
emp[,.(mean_salary = round(mean(salary),1)), by=department_id][order(-mean_salary)]
# group 함수 ---------------------------------------------------------------
emp[, emp_id:=paste(first_name, collapse = ","),.(mean_salary = round(mean(salary),1)), by=department_id][order(-mean_salary)]
# group 함수 ---------------------------------------------------------------
emp[, emp_id:=paste(first_name, collapse = ","), by=department_id][order(-mean_salary)]
# group 함수 ---------------------------------------------------------------
emp[, emp_id:=paste(first_name, collapse = ","), by=department_id][]
data.table(emp)
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), emp_id:=paste(first_name, collapse = ","), by=department_id][]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(paste(first_name, collapse = ","), by=department_id][]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .paste(first_name, collapse = ","), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(paste(first_name, collapse = ",")), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(employee_list= paste(first_name, collapse = ","), department_id), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(department_id, employee_list= paste(first_name, collapse = ",")), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(department_id, mean_salary = mean(salary), employee_list= paste(first_name, collapse = ",")), by=department_id]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(department_id, mean_salary = mean(salary), employee_list= paste(first_name, collapse = ",")), by=department_id][order(-department_id)]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(department_id, mean_salary = mean(salary), .N, employee_list = paste(first_name, collapse = ",")), by=department_id][order(-department_id)]
# group 함수 ---------------------------------------------------------------
emp[order(hire_date), .(department_id, mean_salary = mean(salary), emp_num=.N, employee_list = paste(first_name, collapse = ",")), by=department_id][order(-department_id)]
# 기초 통계량(sum,mean,min,max)
emp[department_id -- NA,.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
# 기초 통계량(sum,mean,min,max)
emp[department_id==NA,.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
# 기초 통계량(sum,mean,min,max)
emp[department_id!=NA,.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
library(data.table)
library(stringr)
# 기초 통계량(sum,mean,min,max)
emp[department_id!=NA,.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
# 기초 통계량(sum,mean,min,max)
emp[department_id==NA,.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
# 기초 통계량(sum,mean,min,max)
emp[is.na(department_id),.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
# 기초 통계량(sum,mean,min,max)
emp[!is.na(department_id),.(m=mean(salary),s = sum(salary),n=.N), by=department_id]
emp[,.(mean_salary = mean(salary), Number = .N), by = hire_date]
emp[,hire_date]
date(emp$hire_date)
emp[,.(mean_salary = mean(salary), Number = .N), by = format(hire_date, format="%Y")]
emp[,.(mean_salary = mean(salary), Number = .N), by = format(hire_date, format="%y")]
emp[,.(mean_salary = mean(salary), Number = .N), by = as.Date(hire_date, format="%y")]
emp[,.(mean_salary = mean(salary), Number = .N), by = as.Date(hire_date)]
?as.Date()
emp[,.(mean_salary = mean(salary), Number = .N), by = as.Date(hire_date, "%yyyy")]
emp[,.(mean_salary = mean(salary), Number = .N), by = as.Date(hire_date, "%y")]
emp[,.(as.Date(hire_date,'%yy',mean_salary = mean(salary), Number = .N), by = as.Date(hire_date, "%y")]
emp[,.(as.Date(hire_date,'%yy'), mean_salary = mean(salary), Number = .N), by = as.Date(hire_date, "%y")]
format(employees$hire_date)
format(employees$hire_date, format="%Y")
format(as.date(employees$hire_date), format="%Y")
format(as.Date(employees$hire_date), format="%Y")
emp[,.(mean_salary = mean(salary), Number = .N), by = format(as.Date(hire_date), format="%y")]
emp[,.(mean_salary = mean(salary), Number = .N), by = format(as.Date(hire_date), format="%Y")]
emp[,.(mean_salary = mean(salary), Number = .N), by = format(as.Date(hire_date), format="%Y")][order(format)]
emp[,.(mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), format="%Y")][order(format)]
emp[,.(year = format(as.Date(hire_date), "%Y"), mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), format="%Y")][order(format)]
emp[,.(year = format(as.Date(hire_date), "%Y"), mean_salary = round(mean(salary),0), Number = .N), by = year][order(format)]
emp[,.(year = format(as.Date(hire_date), "%Y"), mean_salary = round(mean(salary),0), Number = .N)][order(format)]
emp[,.(year = format(as.Date(hire_date), "%Y"), mean_salary = round(mean(salary),0), Number = .N)][order(format)]
emp[,.(mean_salary = round(mean(salary),0), Number = .N)][order(format)]
format(as.Date(employees$hire_date), format="%Y")
emp[,.(mean_salary = round(mean(salary),0), Number = .N), by=format(as.Date(hire_date), "%Y")][order(format)]
emp[,.(mean_salary = round(mean(salary),0), Number = .N), by= format(as.Date(hire_date), "%Y")][order(format)]
emp[,.(year = format(as.Date(hire_date), "%Y"),mean_salary = round(mean(salary),0), Number = .N), by= format(as.Date(hire_date), "%Y")][order(year)]
emp[,.(year = format(as.Date(hire_date), "%Y"),mean_salary = round(mean(salary),0), Number = .N), by= year][order(year)]
emp[,.(,mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), '%Y') as 'year'][order(year)]
emp[,.(,mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), '%Y')][order(year)]
emp[,.(,mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), '%Y')][order(format)]
emp[,.(mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), '%Y')][order(format)]
# Data Manipulation ------------------------------------------------------
#insert
emp
# Data Manipulation ------------------------------------------------------
#insert
employee.head()
# Data Manipulation ------------------------------------------------------
#insert
head(employee)
# Data Manipulation ------------------------------------------------------
#insert
head(employees)
employees[,.(hire_data=as.Date(hire_date))]
employees[,(hire_data=as.Date(hire_date))]
employees[,(hire_date=as.Date(hire_date))]
employees[,(as.Date(hire_date)]
emp
emp[-1]
emp<-emp[-1]
emp
emp<-emp[-1]
emp
emp <- DT(employees)
library(data.table)
library(stringr)
emp <- DT(employees)
emp <- as.data.table(employees)
emp
employees[,(hire_date = as.Date(hire_date)]
emp[,(hire_date = as.Date(hire_date)]
emp[,.(hire_date = as.Date(hire_date)]
emp[,.(hire_date = as.Date(hire_date))]
emp
emp[,hire_date = as.Date(hire_date)]
emp[,.hire_date = as.Date(hire_date)]
emp[,.(hire_date:= as.Date(hire_date))]
emp[,.(hire_date:= lapply(.SD, function(x) as.Date(hire_date)),.SDcols=hire_date]
emp[,.(hire_date):= lapply(.SD, function(x) as.Date(hire_date)),.SDcols=hire_date]
emp[,(hire_date):= lapply(.SD, function(x) as.Date(hire_date)),.SDcols=hire_date]
emp
emp[,(hire_date):= lapply(.SD, function(x) as.Date(x)),.SDcols=hire_date]
emp[,(hire_date= lapply(.SD, function(x) as.Date(x)),.SDcols=hire_date)]
emp[,.(hire_date= lapply(.SD, function(x) as.Date(x)),.SDcols=hire_date)]
emp[,.(hire_date= lapply(.SD, function(x) as.Date(x, format='%Y%M&D')),.SDcols=hire_date)]
emp[,.(hire_date= lapply(.SD, function(x) as.Date(x, origin='%Y%M&D')),.SDcols=hire_date)]
emp[,.(hire_date= lapply(.SD, function(x) as.Date(x, origin='%Y%m&d')),.SDcols=hire_date)]
emp <- as.data.table(employees)
emp
emp[hire_date]
emp[,hire_date]
emp[,.(hire_date)]
emp[,.(hire_date = as.Date(hire_date))]
emp[,.(hire_date =: as.Date(hire_date))]
emp[,.(hire_date := as.Date(hire_date))]
install.packages('dtplyr')
library(dtplyr)
transmute(emp, hire_date = as.Date(hire_date))
library(dtplyr)
library(dplyr)
transmute(emp, hire_date = as.Date(hire_date))
emp
setDT(emp)[,.(hire_date := as.Date(hire_date))]
setDT(emp)[,.(hire_date := as.Date(hire_date))]
setDT(emp)[,.(hire_date = as.Date(hire_date))]
emp
setDT(emp)[,(hire_date)]
setDT(emp)[,(hire_date := lapply(.SD, function(x) as.Date(x, format='%Y-%m-%d')), .SDcols = hire_date)]
setDT(emp)[(hire_date := lapply(.SD, function(x) as.Date(x, format='%Y-%m-%d')), .SDcols = hire_date)]
setDT(emp)[,(hire_date := lapply(.SD, function(x) as.Date(x, format='%Y-%m-%d')))]
setDT(emp)[,(hire_date) := lapply(.SD, function(x) as.Date(x, format='%Y-%m-%d')))]
setDT(emp)[,(hire_date) := lapply(.SD, function(x) as.Date(x, format='%Y-%m-%d'))]
emp[,hire_date:=as.Date(hire_date)]
emo
emp
#delete
emp[,department_id=null]
#delete
emp[,.department_id=null]
#delete
emp[,department_id:=null]
#delete
emp[,department_id:=NULL]
emp
emp <- as.data.table(employees)
emp[-department_id=50]
emp[-department_id==50]
emp[department_id==50]
emp
emp[,(sal = mean(salary)), by=department_id]
emp[,.(sal = mean(salary)), by=department_id]
#group by로 나누고 group별로 나타내기(for문)
mtcars
#group by로 나누고 group별로 나타내기(for문)
iris_dt = as.data.table(iris)
aq_dt = as.data.table(airquality)
melt(aq_dt, id.vars = c('Month','Day'))
aq_m <- melt(aq_dt, id.vars = c('Month','Day'))
aq_d <- dcast(aq_m, Month + Day)
aq_d <- dcast(aq_m, Month + Day ~ Variable)
aq_d <- dcast(aq_m, Month + Day ~ variable)
aq_d
length(aq_dt)
str(aq_dt)
aq_m
aq_d <- dcast(aq_m, Month + Day ~ variable, margins = 'value')
aq_d
aq_d <- dcast(aq_m, Month + Day ~ variable)
aq_d
aq_d <- dcast(aq_m, Month + Day ~ variable, margins = 'value', value.var = 'value')
aq_d
aq_d <- dcast(aq_m, Month + Day ~ variable, value.var = 'value')
aq_d
iris_dt[,., by = species]
iris_dt
iris_dt[,., by = Species]
iris_dt[, by = Species]
iris_dt[, .(m = mean(.)),by = Species]
iris_dt[, .(m = mean(everything())),by = Species]
iris_dt[, .(m = .SD, function(x) mean()),by = Species]
iris_dt[, lapply(.SD,mean),by = Species]
iris_dt[, lapply(.SD,mean),by = Species]
iris_dt[, lapply(.SD,mean),keyby = Species]
glimpse(iris_dt[, lapply(.SD,mean),keyby = Species])
iris_dt[, lapply(.SD,mean),keyby = Species]
temp <- iris_df[:50,]
temp <- iris_df[0:50,]
temp <- iris_dt[0:50,]
temp
# iris 연습문제----
summary(iris$Sepal.Length)
temp[,lapply(.SD, summary)]
temp.summary()
summary(temp)
iris_versicolor = iris_dt[species=='versicolor']
iris_versicolor = iris_dt[Species=='versicolor']
iris_versicolor.head()
head(iris_versicolor)
# iris 연습문제----
x <- iris_dt[,0:4]
x
y <- iris_dt[,5]
x+y
merge.data.table(x,y)
merge.data.table(x,y, all=T)
y
merge.data.table(x,y)
# iris 연습문제----
x <- iris_dt[,0:4]; setkey(x,idx)
x[,rowid := seq_len(nrow(x))]
y[,rowid := seq_len(nrow(y))]
x
y
merge.data.table(x,y, by=rowid)
merge.data.table(x,y, by="rowid")
merge_dt = merge.data.table(x,y, by="rowid")
merge_dt
merge_dt[,rowid=NULL]
merge_dt[,.rowid=NULL]
merge_dt[,.rowid:=NULL]
merge_dt[,rowid:=NULL]
merge_dt
iris_x <- iris[,0:4]
iris_x[,lapply(.SD, cor )]
iris_dt[, lapply(.SD,mean),keyby = Species]
iris_dt[0:3, lapply(.SD,mean), keyby = Species]
iris_dt[, by=Species]
iris_dt[0:3, by=Species]
iris_dt[,by=Species]
iris_dt
iris_x
iris_dt[,by=Species][0:3]
emp[,.(mean_salary = round(mean(salary),0), Number = .N), by = format(as.Date(hire_date), '%Y')][order(format)]
dt %>% group_by(occu) %>% summarise(cy=round(mean(cy),digits = 2)) %>%
ggplot(aes(x=reorder(occu,-cy), y= cy, fill=reorder(occu,-cy))) + geom_bar(stat="summary")+
geom_text(aes(label=cy), vjust=-1)+
coord_cartesian(ylim = c(0,3))+
coord_flip()+
labs(x="Occupation", y="Cynicism", fill = "Occupation")+
scale_fill_brewer(palette = "Purples", direction = -1)
# 변수 평균에 따른 막대 그래프 --------------------------------------------------------
library(dplyr)
dt %>% group_by(occu) %>% summarise(cy=round(mean(cy),digits = 2)) %>%
ggplot(aes(x=reorder(occu,-cy), y= cy, fill=reorder(occu,-cy))) + geom_bar(stat="summary")+
geom_text(aes(label=cy), vjust=-1)+
coord_cartesian(ylim = c(0,3))+
coord_flip()+
labs(x="Occupation", y="Cynicism", fill = "Occupation")+
scale_fill_brewer(palette = "Purples", direction = -1)
library(ggplot2)
library(scales)
library(tidyr)
library(dplyr)
dt %>% group_by(occu) %>% summarise(cy=round(mean(cy),digits = 2)) %>%
ggplot(aes(x=reorder(occu,-cy), y= cy, fill=reorder(occu,-cy))) + geom_bar(stat="summary")+
geom_text(aes(label=cy), vjust=-1)+
coord_cartesian(ylim = c(0,3))+
coord_flip()+
labs(x="Occupation", y="Cynicism", fill = "Occupation")+
scale_fill_brewer(palette = "Purples", direction = -1)
# 변수 평균에 따른 막대 그래프 --------------------------------------------------------
dt
groupingsets(emp, j=c(.(count=.N), lapply(.SD, sum)), .SDcols = 'salary', sets = list('department_id','job_id'), by = c('department_id','job_id'))
library(data.table)
groupingsets(emp, j=c(.(count=.N), lapply(.SD, sum)), .SDcols = 'salary', sets = list('department_id','job_id'), by = c('department_id','job_id'))
Employees
employees
emp
airquality
head(airquality)
emp_m <- melt(emp, id.vars = c('Month','Day'))
emp_m <- melt(emp, id_vars = c('Month','Day'))
emp_m
aq_m <- melt(airquality, id_vars = c('Month','Day'))
head(airquality)
aq
aq <- setDT(airquality)
aq <- as.data.table(airquality)
aq_m <- melt(aq, id_vars = c('Month','Day'))
aq_m
aq <- as.data.table(airquality)
aq
aq_m <- melt(aq, id.vars = c('Month','Day'))
aq_m
aq_d <- dcast(aq_m, Month + Day ~ variable, variable.names='variable', value.var = 'value')
aq_d
aq_d <- dcast(aq_m, Month + Day ~ ., variable.names='variable', value.var = 'value')
#unique
uniqueN(emp, by='d_id')
#unique
uniqueN(emp, by='department_id')
#grouping sets
groupingsets(emp, j = c(.(count=.N),(lapply(.SD, sum)), .SDCols=salary, sets = list('department_id','job_id')))
#grouping sets
groupingsets(emp, j = c(.(count=.N),(lapply(.SD, sum)), .SDCols=salary, sets = list('department_id','job_id'), by=c('department_id','job_id')))
#grouping sets
groupingsets(emp, j = c(.(count=.N),(lapply(.SD, sum)), .SDCols=salary, sets = list('department_id','job_id'), by=c('department_id','job_id')))
#grouping sets
groupingsets(emp, j = c(.(count=.N),lapply(.SD, sum)), .SDCols=salary, sets = list('department_id','job_id'), by=c('department_id','job_id')))
#grouping sets
groupingsets(emp, j = c(.(count=.N),lapply(.SD, sum)), .SDCols=salary, sets = list('department_id','job_id'), by=c('department_id','job_id'))
groupingsets(emp, j=c(.(count=.N), lapply(.SD, sum)), .SDcols = 'salary',  sets = list("department_id","job_id"), by = c("department_id","job_id"))[order(department_id)]
groupingsets(emp, j = c(.(count=.N),lapply(.SD, sum)), .SDcols='salary', sets = list('department_id','job_id'), by=c('department_id','job_id'))
rollup(emp, j = .(avg_sal=mean(salary)), by=c('department_id','job_id'), id=T)
rollup(emp, j = .(avg_sal=mean(salary)), by=c('department_id','job_id'))
rollup(emp, j = .(avg_sal=mean(salary)), by=c('department_id','job_id'))[order(department_id)]
emp
emp[order(-salary)]
emp[,.(employee_id,department_id, salary)][order(-salary)]
emp[,.(employee_id,department_id, salary, rank=rank(salary))][order(-salary)]
emp[,.(employee_id,department_id, salary, rank=rank(-salary))][order(-salary)]
emp[,.(employee_id,department_id, salary, rank=as.numeric(rank(-salary)))][order(-salary)]
#listagg
emp[,.(department_id,emp_list = paste(first_name, sep=", "), by=department_id]
#listagg
emp[,.(department_id,emp_list = paste(first_name, sep=", ")), by=department_id]
#listagg
emp[,.(department_id,emp_list = paste(first_name, sep=", "))]
#listagg
emp[,.(emp_list = paste(first_name, sep=", ")), by=department_id]
#listagg
emp[,.(emp_list = paste(first_name, collapse=",")), by=department_id]
#rank
emp[,.(employee_id,department_id, salary, rank=as.numeric(rank(-salary)), sal_num = seq_len(nrow(salary)))][order(-salary)]
#rank
emp[,.(employee_id,department_id, salary, rank=as.numeric(rank(-salary)), sal_num = seq_len(nrow(emp)))][order(-salary)]
?frank
emp[,rank = frank(-salary, ties.method = "min")] # method= min,dense, first
emp[,rank := frank(-salary, ties.method = "min")] # method= min,dense, first
emp[,.(rank)]
emp[,.(rank)][order(-salary)]
emp
emp[,.(rank,salary)][order(-salary)]
emp[,.(sal_rank = cumsum(salary)), by=department_id][order(-salary)]
emp[,.(sal_rank = cumsum(salary)), by=department_id][order(-sal_rank)]
emp[,.(sal_rank = sum(salary)), by=department_id][order(-sal_rank)]
emp[,rank_lag:=shift(rank,1,type='lag')]
emp[,rank_lead:=shift(rank,1,type='lead')]
emp[,.(rank, rank_lag, rank_lead)]
emp[,.(rank, rank_lag, rank_lead)][order(-rank)]
emp[,.(rank, rank_lag, rank_lead)][order(rank)]
emp[department_id %between% c(50,90)]
emp[department_id %between% c(50,60)]
#like
emp[job_id %like% "man"]
#like
emp[job_id %like% "%man"]
#like
emp[job_id %like% "MAN"]
#like
emp[job_id %like% "MAN",.(first_name, job_id)]
a <- data.table::data.table(a=1:4, b=(1:4)^2)
a# Data Manipulation Language------------------------------------------------------
# join -------------------------------------------------------------------
library(data.table)
B <- data.table(a=2:5, b=(2:5)^2)
A
A <- data.table::data.table(a=1:4, b=(1:4)^2)
B <- data.table(a=2:5, b=(2:5)^2)
remove(a)
A
A;b
A;B
A[B, on='a', bb :=i.b]
A
B <- data.table(a=2:5, b=(3:6)^2)
A[B, on='a', bb :=i.b]
A
emp
dpt
departments
locations
dept <- data.table::setDT(departments)
head(dept)
loc <- setDT(locations)
head(loc)
emp[loc, on='department_id', loc_id:=i.location_id]
emp
emp[dept, on='department_id', loc_id:=i.location_id]
emp
head(loc)
emp[dept, on='department_id', loc_id:=NULL]
emp[-1]
emp[,-1]
setnames(emp,loc_id,location_id)
setnames(emp,'loc_id','location_id')
emp
head(loc)
emp[loc, on='loc_id', city :=i.city]
emp[loc, on='location_id', city :=i.city]
colnames(loc) <- tolower(colnames(loc))
emp[loc, on='location_id', city :=i.city]
emp[,.(name = paste(first_name, last_name), department_id, location_id, city)]
View(iris_dt)
library(data.table)
rowid(emp)
rowid(emp)
emp[rowid()]
emp[,.(I)]
emp[,.I]
emp[I]
emp[.I]
emp[.I,]
emp[.i,]
emp[seq_len()]
emp[seq_len(department_id)]
emp[seq_len(nrows(department_id))]
emp[seq_len(nrow(department_id))]
emp[,seq_len(nrow(department_id))]
emp[,.seq_len(nrow(department_id))]
emp[,.(seq_len(nrow(department_id))]
emp[,.(seq_len(nrow(department_id)))]
emp[,.(x=seq_len(nrow(department_id)))]
emp[,.(x=seq_len(.N))]
emp[,.(x=seq_len(.N))/2]
emp[.N]
emp[.N,]
emp[.N, ]
emp[emp[.N]]
emp[emp[.N],]
emp[emp[,.N],]
emp[emp[,.N]]
emp[emp[,.I]]
emp[emp[,.I]%%2==1]
emp[emp[,.I]%%2==0]
emp[emp[,.I]%%2==0]
dim(emp[emp[,.I]%%2==0])
dim(emp[emp[,.I]%%2==1])
emp[emp[,.I]%%2==0]
emp[emp[.,employee_id]%%2==0]
View(iris_dt)
install.packages('readxls')
install.packages('readxl')
library(readxl)
getwd()
df <- read_xlsx("C:/Users/jyhoon94/python/project/ml_project/csv/2018_KOREA.xlsx")
library(data.table)
df_dt <- as.data.table(df)
fwrite(df_dt, 'C:/Users/jyhoon94/python/project/ml_project/csv/2018_KOREA.csv')
